# ============================================================================
# DATABASE
# ============================================================================
DATABASE_URL="postgresql://user:password@localhost:5432/electrician_prep?schema=public"

# ============================================================================
# AUTH.JS (NextAuth v5)
# ============================================================================

# Required: Application URL
# Development: http://localhost:3000
# Production: https://yourdomain.com
NEXTAUTH_URL="http://localhost:3000"

# Required: Secret key for signing/encrypting tokens and cookies
# Generate with: openssl rand -base64 32
# SECURITY: Use a strong random value in production
NEXTAUTH_SECRET="your-secret-key-here-use-openssl-rand-base64-32"

# ============================================================================
# EMAIL PROVIDER (Magic Links)
# ============================================================================

# Required for passwordless authentication
# Options: Resend, SendGrid, AWS SES, Gmail SMTP

# --- Option 1: Resend (Recommended for production) ---
# Sign up at https://resend.com (3,000 emails/month free)
# Use these SMTP credentials:
# EMAIL_SERVER_HOST="smtp.resend.com"
# EMAIL_SERVER_PORT="587"
# EMAIL_SERVER_USER="resend"
# EMAIL_SERVER_PASSWORD="re_xxxxxxxxxxxxxxxxxxxxx"
# EMAIL_FROM="noreply@yourdomain.com"

# --- Option 2: SendGrid ---
# EMAIL_SERVER_HOST="smtp.sendgrid.net"
# EMAIL_SERVER_PORT="587"
# EMAIL_SERVER_USER="apikey"
# EMAIL_SERVER_PASSWORD="SG.xxxxxxxxxxxxxxxxxxxxx"
# EMAIL_FROM="noreply@yourdomain.com"

# --- Option 3: Gmail SMTP (Development only - not for production) ---
# Enable "App Passwords" in Google Account settings
EMAIL_SERVER_HOST="smtp.gmail.com"
EMAIL_SERVER_PORT="587"
EMAIL_SERVER_USER="your-email@gmail.com"
EMAIL_SERVER_PASSWORD="your-16-char-app-password"
EMAIL_FROM="your-email@gmail.com"

# ============================================================================
# GOOGLE OAUTH (Optional)
# ============================================================================

# Optional: Enable Google "Sign in with Google"
# Setup: https://console.cloud.google.com/apis/credentials
# 1. Create OAuth 2.0 Client ID
# 2. Add authorized redirect URI: http://localhost:3000/api/auth/callback/google
# 3. Copy Client ID and Client Secret below

GOOGLE_CLIENT_ID=""
GOOGLE_CLIENT_SECRET=""

# ============================================================================
# ENVIRONMENT
# ============================================================================

# Node environment
NODE_ENV="development"

# ============================================================================
# SECURITY NOTES
# ============================================================================

# 1. NEXTAUTH_SECRET: MUST be a strong random value in production
#    Generate with: openssl rand -base64 32
#    Never commit the real value to version control

# 2. Database credentials: Use strong passwords, restrict network access

# 3. Email credentials: Never share or commit these values
#    Use environment-specific credentials (dev/staging/prod)

# 4. OAuth secrets: Keep these confidential, rotate if compromised

# 5. In production:
#    - Use HTTPS (secure: true in cookies)
#    - Set secure headers (HSTS, CSP, etc.)
#    - Enable rate limiting
#    - Monitor for suspicious activity
#    - Use managed secrets (AWS Secrets Manager, etc.)
